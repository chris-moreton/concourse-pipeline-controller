---
resource_types:
- name: s3-bucket
  type: docker-image
  source:
    repository: 18fgsa/s3-resource-simple
resources:
- name: pipeline-controller
  type: git
  source:
    uri: https://github.com/((pipeline-controller/GITHUB_OWNER))/concourse-pipeline-controller.git
    branch: master
    password: ((pipeline-controller/GITHUB_API_TOKEN))
- name: source-code
  type: git
  source:
    uri: git@github.com:((pipeline-controller/GITHUB_OWNER))/((PRODUCT))-((COMPONENT)).git
    branch: master
    private_key: ((GITHUB_DEPLOY_KEY.private_key))
    password: ((pipeline-controller/GITHUB_API_TOKEN))
- name: packaged-build
  type: s3
  source:
    bucket: pipeline-controller-builds
    region_name: eu-west-2
    versioned_file: ((PRODUCT))-((COMPONENT)).jar
    access_key_id: ((pipeline-controller/AWS_ACCESS_KEY_ID))
    secret_access_key: ((pipeline-controller/AWS_SECRET_ACCESS_KEY))
jobs:
- name: build
  public: false
  plan:
  - get: source-code
    trigger: false
  - get: pipeline-controller
    trigger: false
  - task: build
    file: pipeline-controller/devops/concourse/tasks/external/build-PROJECT_TYPE.yml
  - put: packaged-build
    params:
      file: build/((PRODUCT))-((COMPONENT)).tar.gz
- name: build-infrastructure-aat
  public: false
  plan:
    - get: source-code
      passed:
        - build
      trigger: true
    - get: pipeline-controller
      trigger: false
    - task: call-terraform
      file: pipeline-controller/devops/concourse/tasks/external/build-infrastructure.yml
      vars:
        ENVIRONMENT: aat
- name: deploy-aat
  public: false
  plan:
    - get: source-code
      passed:
        - build-infrastructure-aat
      trigger: true
    - get: pipeline-controller
      trigger: false
    - get: packaged-build
      trigger: false
    - task: create-manifests
      file: pipeline-controller/devops/concourse/tasks/external/create-manifest-PROJECT_TYPE.yml
      vars:
        ENVIRONMENT: aat
    - task: deploy
      file: pipeline-controller/devops/concourse/tasks/external/deploy.yml
      vars:
        ENVIRONMENT: aat
- name: functional-test-aat
  public: false
  plan:
    - get: source-code
      passed:
        - deploy-aat
      trigger: true
    - get: pipeline-controller
      trigger: false
    - get: packaged-build
      trigger: false
    - task: functional-test
      file: pipeline-controller/devops/concourse/tasks/external/functional-test.yml
      vars:
        ENVIRONMENT: aat
- name: build-infrastructure-prod
  public: false
  plan:
    - get: packaged-build
      passed:
        - functional-test-aat
      trigger: true
    - get: pipeline-controller
      trigger: false
    - get: source-code
      trigger: false
    - task: call-terraform
      file: pipeline-controller/devops/concourse/tasks/external/build-infrastructure.yml
      vars:
        ENVIRONMENT: prod
- name: deploy-prod
  public: false
  plan:
    - get: source-code
      passed:
        - build-infrastructure-prod
      trigger: true
    - get: pipeline-controller
      trigger: false
    - get: packaged-build
      trigger: false
    - task: create-manifests
      file: pipeline-controller/devops/concourse/tasks/external/create-manifest-PROJECT_TYPE.yml
      vars:
        ENVIRONMENT: prod
    - task: deploy
      file: pipeline-controller/devops/concourse/tasks/external/deploy.yml
      vars:
        ENVIRONMENT: prod
