platform: linux
image_resource:
  type: docker-image
  source:
    repository: netsensia/pipelinefull
    tag: 1.0.8
outputs:
  - name: manifests
run:
  path: bash
  dir: manifests
  args:
    - -exc
    - |
      cat > manifest.yml << EOT
      ---
      applications:
      - name: ((PRODUCT))-((COMPONENT))-((ENVIRONMENT))
        path: ((PRODUCT))-((COMPONENT)).jar
        buildpack: java_buildpack
        memory: 768M
        disk: 256M
      EOT
      if [ ((services/ENABLE)) eq "1" ]; then
        echo "  services:" >> manifest.yml
        if [ ((services/MYSQL)) eq "1" ]; then
          echo "  - ((COMPONENT))-mysql" >> manifest.yml
        fi
        if [ ((services/ELASTIC_SEARCH)) eq "1" ]; then
          echo "  - ((COMPONENT))-elasticsearch" >> manifest.yml
        fi
      fi
      cat >> manifest.yml << EOT
        env:
          SPRING_PROFILES_ACTIVE: production
      EOT
      export AWS_ACCESS_KEY_ID=((AWS_ACCESS_KEY_ID))
      export AWS_SECRET_ACCESS_KEY=((AWS_SECRET_ACCESS_KEY))
      echo "Logging into Concourse..."
      fly --target netsensia-concourse login --insecure --concourse-url https://((CONCOURSE_HOST)) -u admin -p ((CONCOURSE_ADMIN_PASSWORD))
      echo "Syncing..."
      fly --target netsensia-concourse sync
      echo "Logging into CredHub..."
      eval "$(control-tower info --iaas aws --env --region eu-west-2 netsensia-concourse)"
      ENV=((ENVIRONMENT))
      OUTPUT=`credhub find -n concourse/((PRODUCT))/((COMPONENT))/$ENV/env`
      ENV_VARS=$(echo $OUTPUT | grep -o "((ENVIRONMENT))/\S*")
      while IFS=' ' read -ra VAL; do
            for i in "${VAL[@]}"; do
                VALUE=`credhub get -q -n concourse/((PRODUCT))/((COMPONENT))/$i`
                ENV_VAR=${i/$ENV\/env\//}
      cat >> manifest.yml << EOT
          $ENV_VAR: $VALUE
      EOT
            done
      done <<< "$ENV_VARS"
