platform: linux
image_resource:
  type: docker-image
  source:
    repository: netsensia/pipelinefull
    tag: 1.0.8
inputs:
  - name: packaged-build
  - name: manifests
params:
  CF_USER: ((pipeline-controller/CLOUD_FOUNDRY_DEPLOY_USER.username))
  CF_PASS: ((pipeline-controller/CLOUD_FOUNDRY_DEPLOY_USER.password))
  CF_SPACE: ((PRODUCT))-((ENVIRONMENT))
  CF_APP: ((PRODUCT))-((COMPONENT))-((ENVIRONMENT))
run:
  path: bash
  dir: packaged-build
  args:
    - -exc
    - |
      ZIP_FILE=((PRODUCT))-((COMPONENT)).tar.gz
      tar -zxf $ZIP_FILE
      rm $ZIP_FILE
      cat > .cfignore << EOT
      node_modules/.cache
      EOT
      INDEX=`find .next/server/static -name index.js` || true
      if [ ! -z $INDEX ];
      then
        export AWS_ACCESS_KEY_ID=((pipeline-controller/AWS_ACCESS_KEY_ID))
        export AWS_SECRET_ACCESS_KEY=((pipeline-controller/AWS_SECRET_ACCESS_KEY))
        echo "Logging into Concourse..."
        fly --target netsensia-concourse login --insecure --concourse-url https://((pipeline-controller/CONCOURSE_HOST)) -u admin -p ((pipeline-controller/CONCOURSE_ADMIN_PASSWORD))
        echo "Syncing..."
        fly --target netsensia-concourse sync
        echo "Logging into CredHub..."
        eval "$(control-tower info --iaas aws --env --region eu-west-2 netsensia-concourse)"
        ENV=((ENVIRONMENT))
        OUTPUT=`credhub find -n concourse/main/directorzone-frontend/$ENV`
        for JS_FILENAME in .next/server/static/*/pages/*.js; do
        ENV_VARS=$(echo $OUTPUT | grep -o "((ENVIRONMENT))/\S*")
        while IFS=' ' read -ra VAL; do
              for i in "${VAL[@]}"; do
                  VALUE=`credhub get -q -n concourse/main/directorzone-frontend/$i`
                  VALUE=${VALUE//\//\\\/}
                  VALUE=${VALUE//\./\\\.}
                  ENV_VAR=${i/$ENV\/env\//}
                  sed -i -e "s/$ENV_VAR: undefined/$ENV_VAR: '$VALUE'/g" $JS_FILENAME
              done
        done <<< "$ENV_VARS"
      fi
      cf login -a api.run.pivotal.io -u $CF_USER -p $CF_PASS -s $CF_SPACE
      cp ../manifests/manifest.yaml .
      export CF_TRACE=~/cf-trace.log
      cf blue-green-deploy $CF_APP --delete-old-apps
