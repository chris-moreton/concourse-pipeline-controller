platform: linux
image_resource:
  type: docker-image
  source:
    repository: netsensia/pipelinefull
    tag: 1.0.12
inputs:
  - name: source-code
outputs:
  - name: build
run:
  dir: source-code
  path: bash
  args:
    - -exc
    - |
      fly --target netsensia-concourse login --insecure --concourse-url https://((CONCOURSE_HOST)) -u admin -p ((CONCOURSE_ADMIN_PASSWORD))
      echo "Syncing..."
      fly --target netsensia-concourse sync

      export AWS_ACCESS_KEY_ID=((AWS_ACCESS_KEY_ID))
      export AWS_SECRET_ACCESS_KEY=((AWS_SECRET_ACCESS_KEY))

      echo "Logging into CredHub..."
      eval "$(control-tower info --iaas aws --env --region eu-west-2 netsensia-concourse)"
      ENV=((ENVIRONMENT))
      OUTPUT=`credhub find -n concourse/((PRODUCT))/((COMPONENT))/$ENV/env`
      ENV_VARS=$(echo $OUTPUT | grep -o "((ENVIRONMENT))/\S*")

      while IFS=' ' read -ra VAL; do
            for i in "${VAL[@]}"; do
                VALUE=`credhub get -q -n concourse/((PRODUCT))/((COMPONENT))/$i`
                ENV_VAR=${i/$ENV\/env\//}
                echo "Setting $ENV_VAR to $VALUE"
                export $ENV_VAR=$VALUE
            done
      done <<< "$ENV_VARS"

      ./gradlew build
      JAR_FILE=((PRODUCT))-((COMPONENT)).jar
      ZIP_FILE=((PRODUCT))-((COMPONENT)).tar.gz
      cd build/libs
      tar -zcvf $ZIP_FILE $JAR_FILE
      cp $ZIP_FILE ../../../build/$ZIP_FILE
caches:
  - path: .gradle/
  - path: .m2/
